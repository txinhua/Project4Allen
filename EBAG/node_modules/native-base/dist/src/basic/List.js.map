{"version":3,"sources":["../../../src/basic/List.js"],"names":["List","props","_rows","openCellId","dataArray","renderRow","rowHasChanged","r1","r2","ds","ListView","DataSource","state","dataSource","cloneWithRows","nextProps","setState","secId","rowId","rowMap","cellIdentifier","safeCloseOpenRow","onRowOpen","closeOnRowPress","e","closeOnScroll","onScroll","enable","_listView","setNativeProps","scrollEnabled","ref","listViewRef","id","_root","openLeftRow","openRightRow","closeOnRowBeginSwipe","closeRow","childrenArray","React","Children","map","children","child","rowData","previewRowId","getRowIDForFlatIndex","previewRowIndex","row","rowSwipeGestureBegan","onRowDidOpen","onRowClose","onRowDidClose","onRowPress","setScrollEnabled","leftOpenValue","rightOpenValue","disableLeftSwipe","disableRightSwipe","stopLeftSwipe","stopRightSwipe","recalculateHiddenLayout","swipeRowStyle","previewFirstRow","previewDuration","previewOpenValue","tension","friction","directionalDistanceChangeThreshold","swipeToOpenPercent","renderLeftHiddenRow","renderRightHiddenRow","setRefs","c","renderChildren","Component","defaultProps","StyledList","mapPropsToStyleNames"],"mappings":"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","file":"List.js","sourcesContent":["import React, { Component } from 'react';\nimport { ListView, View } from 'react-native';\nimport { connectStyle } from 'native-base-shoutem-theme';\n\nimport mapPropsToStyleNames from '../utils/mapPropsToStyleNames';\n\nimport { SwipeRow } from './SwipeRow';\n\nclass List extends Component {\n  static defaultProps = {\n    leftOpenValue: 0,\n    rightOpenValue: 0,\n    closeOnRowBeginSwipe: false,\n    closeOnScroll: true,\n    closeOnRowPress: true,\n    disableLeftSwipe: false,\n    disableRightSwipe: false,\n    recalculateHiddenLayout: false,\n    previewFirstRow: false,\n    directionalDistanceChangeThreshold: 2,\n    swipeToOpenPercent: 50\n  };\n  constructor(props) {\n    super(props);\n    this._rows = {};\n    this.openCellId = null;\n    if (props.dataArray && props.renderRow) {\n      const rowHasChanged = props.rowHasChanged || ((r1, r2) => r1 !== r2);\n      const ds = new ListView.DataSource({ rowHasChanged });\n      this.state = {\n        dataSource: ds.cloneWithRows(props.dataArray)\n      };\n    } else {\n      this.state = {};\n    }\n  }\n  componentWillReceiveProps(nextProps) {\n    if (this.state.dataSource) {\n      this.setState({\n        dataSource: this.state.dataSource.cloneWithRows(nextProps.dataArray)\n      });\n    }\n  }\n\n  onRowOpen(secId, rowId, rowMap) {\n    const cellIdentifier = `${secId}${rowId}`;\n    if (this.openCellId && this.openCellId !== cellIdentifier) {\n      this.safeCloseOpenRow();\n    }\n    this.openCellId = cellIdentifier;\n    if (this.props.onRowOpen) {\n      this.props.onRowOpen(secId, rowId, rowMap);\n    }\n  }\n\n  onRowPress() {\n    if (this.openCellId) {\n      if (this.props.closeOnRowPress) {\n        this.safeCloseOpenRow();\n        this.openCellId = null;\n      }\n    }\n  }\n\n  onScroll(e) {\n    if (this.openCellId) {\n      if (this.props.closeOnScroll) {\n        this.safeCloseOpenRow();\n        this.openCellId = null;\n      }\n    }\n\n    if (this.props.onScroll) {\n      this.props.onScroll(e);\n    }\n  }\n\n  setScrollEnabled(enable) {\n    this._listView.setNativeProps({ scrollEnabled: enable });\n  }\n\n  setRefs(ref) {\n    this._listView = ref;\n\n    if (this.props.listViewRef) {\n      this.props.listViewRef(ref);\n    }\n  }\n\n  openLeftRow(id) {\n    this._rows[id]._root.openLeftRow();\n  }\n\n  openRightRow(id) {\n    this._rows[id]._root.openRightRow();\n  }\n\n  closeRow() {\n    if (this.openCellId) {\n      if (this.props.closeOnRowPress) {\n        this.safeCloseOpenRow();\n        this.openCellId = null;\n      }\n    }\n  }\n\n  rowSwipeGestureBegan(id) {\n    if (\n      this.props.closeOnRowBeginSwipe &&\n      this.openCellId &&\n      this.openCellId !== id\n    ) {\n      this.safeCloseOpenRow();\n    }\n  }\n\n  safeCloseOpenRow() {\n    // if the openCellId is stale due to deleting a row this could be undefined\n    if (this._rows[this.openCellId]._root) {\n      this._rows[this.openCellId]._root.closeRow();\n    }\n  }\n\n  renderChildren() {\n    const childrenArray = React.Children.map(\n      this.props.children,\n      child => child\n    );\n\n    return childrenArray;\n  }\n\n  renderRow(rowData, secId, rowId) {\n    const previewRowId =\n      this.props.dataSource &&\n      this.props.dataSource.getRowIDForFlatIndex(\n        this.props.previewRowIndex || 0\n      );\n    return (\n      <SwipeRow\n        list\n        ref={row => (this._rows[`${secId}${rowId}`] = row)}\n        swipeGestureBegan={() => this.rowSwipeGestureBegan(`${secId}${rowId}`)}\n        onRowOpen={() => this.onRowOpen(secId, rowId, this._rows)}\n        onRowDidOpen={() =>\n          this.props.onRowDidOpen &&\n          this.props.onRowDidOpen(secId, rowId, this._rows)\n        }\n        onRowClose={() =>\n          this.props.onRowClose &&\n          this.props.onRowClose(secId, rowId, this._rows)\n        }\n        onRowDidClose={() =>\n          this.props.onRowDidClose &&\n          this.props.onRowDidClose(secId, rowId, this._rows)\n        }\n        onRowPress={() => this.onRowPress(`${secId}${rowId}`)}\n        openLeftRow={() => this.openLeftRow(`${secId}${rowId}`)}\n        openRightRow={() => this.openRightRow(`${secId}${rowId}`)}\n        closeRow={() => this.closeRow(`${secId}${rowId}`)}\n        setScrollEnabled={enable => this.setScrollEnabled(enable)}\n        leftOpenValue={this.props.leftOpenValue}\n        rightOpenValue={this.props.rightOpenValue}\n        closeOnRowPress={this.props.closeOnRowPress}\n        disableLeftSwipe={this.props.disableLeftSwipe}\n        disableRightSwipe={this.props.disableRightSwipe}\n        stopLeftSwipe={this.props.stopLeftSwipe}\n        stopRightSwipe={this.props.stopRightSwipe}\n        recalculateHiddenLayout={this.props.recalculateHiddenLayout}\n        style={this.props.swipeRowStyle}\n        preview={\n          (this.props.previewFirstRow || this.props.previewRowIndex) &&\n          rowId === previewRowId\n        }\n        previewDuration={this.props.previewDuration}\n        previewOpenValue={this.props.previewOpenValue}\n        tension={this.props.tension}\n        friction={this.props.friction}\n        directionalDistanceChangeThreshold={\n          this.props.directionalDistanceChangeThreshold\n        }\n        swipeToOpenPercent={this.props.swipeToOpenPercent}\n        left={\n          this.props.renderLeftHiddenRow &&\n          this.props.renderLeftHiddenRow(rowData, secId, rowId, this._rows)\n        }\n        right={\n          this.props.renderRightHiddenRow &&\n          this.props.renderRightHiddenRow(rowData, secId, rowId, this._rows)\n        }\n        body={\n          this.props.renderRow &&\n          this.props.renderRow(rowData, secId, rowId, this._rows)\n        }\n      />\n    );\n  }\n  render() {\n    if (this.props.renderLeftHiddenRow || this.props.renderRightHiddenRow) {\n      return (\n        <ListView\n          {...this.props}\n          ref={ref => {\n            this.setRefs(ref);\n            this._root = ref;\n          }}\n          enableEmptySections\n          onScroll={e => this.onScroll(e)}\n          renderRow={(rowData, secId, rowId) =>\n            this.renderRow(rowData, secId, rowId, this._rows)\n          }\n        />\n      );\n    } else if (this.state.dataSource) {\n      return (\n        <ListView\n          {...this.props}\n          ref={ref => (this._root = ref)}\n          enableEmptySections\n          dataSource={this.state.dataSource}\n          renderRow={this.props.renderRow}\n        />\n      );\n    }\n    return (\n      <View ref={c => (this._root = c)} {...this.props}>\n        {this.renderChildren()}\n      </View>\n    );\n  }\n}\nconst StyledList = connectStyle('NativeBase.List', {}, mapPropsToStyleNames)(\n  List\n);\n\nexport { StyledList as List };\n"]}