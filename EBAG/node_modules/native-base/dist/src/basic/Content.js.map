{"version":3,"sources":["../../../src/basic/Content.js"],"names":["Content","props","state","orientation","val","maxComp","Math","max","variable","deviceWidth","deviceHeight","width","setState","mode","inSet","inset","undefined","Inset","style","InsetValues","portrait","landscape","leftPadder","padding","paddingLeft","leftInset","rightPadder","paddingRight","rightInset","children","contentContainerStyle","disableKBDismissScroll","keyboardShouldPersistTaps","padder","variables","context","theme","isIphoneX","x","y","_scrollview","c","_root","layoutChange","e","nativeEvent","layout","calculateLeft","calculateRight","contentPadding","Component","contextTypes","PropTypes","object","propTypes","oneOfType","number","array","bool","string","StyledContent","mapPropsToStyleNames"],"mappings":"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","file":"Content.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\nimport { connectStyle } from 'native-base-shoutem-theme';\n\nimport variable from '../theme/variables/platform';\nimport mapPropsToStyleNames from '../utils/mapPropsToStyleNames';\n\nclass Content extends Component {\n  static contextTypes = {\n    theme: PropTypes.object\n  };\n  constructor(props) {\n    super(props);\n    this.state = {\n      orientation: 'portrait'\n    };\n  }\n  layoutChange(val) {\n    const maxComp = Math.max(variable.deviceWidth, variable.deviceHeight);\n    if (val.width >= maxComp) this.setState({ orientation: 'landscape' });\n    else {\n      this.setState({ orientation: 'portrait' });\n    }\n  }\n\n  calculateLeft(mode, inSet) {\n    let inset = null;\n    if (inSet !== undefined) {\n      inset = inSet;\n    } else {\n      inset = variable.Inset;\n    }\n    const { style } = this.props;\n    const InsetValues = mode === 'portrait' ? inset.portrait : inset.landscape;\n    let leftPadder = null;\n    if (style[1] !== undefined) {\n      if (\n        style[1].padding !== undefined ||\n        style[1].paddingLeft !== undefined\n      ) {\n        leftPadder =\n          (style[1].paddingLeft !== undefined\n            ? style[1].paddingLeft\n            : style[1].padding) + InsetValues.leftInset;\n      }\n    } else if (style.padding !== undefined || style.paddingLeft !== undefined) {\n      leftPadder =\n        (style.paddingLeft !== undefined ? style.paddingLeft : style.padding) +\n        InsetValues.leftInset;\n    } else {\n      leftPadder = InsetValues.leftInset;\n    }\n    return leftPadder;\n  }\n  calculateRight(mode, inSet) {\n    let inset = null;\n    if (inSet !== undefined) {\n      inset = inSet;\n    } else {\n      inset = variable.Inset;\n    }\n    const { style } = this.props;\n    const InsetValues = mode === 'portrait' ? inset.portrait : inset.landscape;\n    let rightPadder = null;\n    if (style[1] !== undefined) {\n      if (\n        style[1].padding !== undefined ||\n        style[1].paddingRight !== undefined\n      ) {\n        rightPadder =\n          (style[1].paddingRight !== undefined\n            ? style[1].paddingRight\n            : style[1].padding) + InsetValues.rightInset;\n      }\n    } else if (\n      style.padding !== undefined ||\n      style.paddingRight !== undefined\n    ) {\n      rightPadder =\n        (style.paddingRight !== undefined\n          ? style.paddingRight\n          : style.padding) + InsetValues.rightInset;\n    } else {\n      rightPadder = InsetValues.rightInset;\n    }\n    return rightPadder;\n  }\n  render() {\n    const {\n      children,\n      contentContainerStyle,\n      disableKBDismissScroll,\n      keyboardShouldPersistTaps,\n      padder,\n      style\n    } = this.props;\n    const variables = this.context.theme\n      ? this.context.theme['@@shoutem.theme/themeStyle'].variables\n      : variable;\n    return variables.isIphoneX ? (\n      <KeyboardAwareScrollView\n        automaticallyAdjustContentInsets={false}\n        resetScrollToCoords={disableKBDismissScroll ? null : { x: 0, y: 0 }}\n        keyboardShouldPersistTaps={keyboardShouldPersistTaps || 'handled'}\n        ref={c => {\n          this._scrollview = c;\n          this._root = c;\n        }}\n        {...this.props}\n        onLayout={e => this.layoutChange(e.nativeEvent.layout)}\n        style={[\n          style,\n          {\n            paddingLeft: this.calculateLeft(\n              this.state.orientation,\n              variables.Inset\n            ),\n            paddingRight: this.calculateRight(\n              this.state.orientation,\n              variables.Inset\n            )\n          }\n        ]}\n        contentContainerStyle={[\n          { padding: padder ? variables.contentPadding : undefined },\n          contentContainerStyle\n        ]}\n      >\n        {children}\n      </KeyboardAwareScrollView>\n    ) : (\n      <KeyboardAwareScrollView\n        automaticallyAdjustContentInsets={false}\n        resetScrollToCoords={disableKBDismissScroll ? null : { x: 0, y: 0 }}\n        keyboardShouldPersistTaps={keyboardShouldPersistTaps || 'handled'}\n        ref={c => {\n          this._scrollview = c;\n          this._root = c;\n        }}\n        {...this.props}\n        contentContainerStyle={[\n          { padding: padder ? variables.contentPadding : undefined },\n          contentContainerStyle\n        ]}\n      >\n        {children}\n      </KeyboardAwareScrollView>\n    );\n  }\n}\n\nContent.propTypes = {\n  style: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.number,\n    PropTypes.array\n  ]),\n  padder: PropTypes.bool,\n  disableKBDismissScroll: PropTypes.bool,\n  keyboardShouldPersistTaps: PropTypes.string\n};\n\nconst StyledContent = connectStyle(\n  'NativeBase.Content',\n  {},\n  mapPropsToStyleNames\n)(Content);\n\nexport { StyledContent as Content };\n"]}