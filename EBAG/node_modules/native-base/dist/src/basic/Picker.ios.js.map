{"version":3,"sources":["../../../src/basic/Picker.ios.js"],"names":["PickerNB","props","getInitialStyle","picker","pickerItem","getChildren","children","Array","isArray","concat","appliedChildren","apply","state","modalVisible","currentLabel","getLabel","dataSource","nextProps","nextLabel","currentDS","nextDS","setState","item","_","find","child","value","selectedValue","get","defaultProps","style","itemStyle","visible","React","cloneElement","iosIcon","fontSize","lineHeight","onPress","enabled","undefined","_setModalVisible","text","placeholder","renderButton","selectedItem","getSelectedItem","textStyle","note","placeholderStyle","renderIcon","renderHeader","headerStyle","shadowOffset","shadowColor","shadowRadius","shadowOpacity","marginLeft","headerBackButtonStyle","headerBackButtonTextStyle","headerBackButtonText","headerTitleStyle","iosHeader","_root","c","modalStyle","index","String","onValueChange","current","label","itemTextStyle","Component","Item","render","propTypes","ViewPropTypes","PropTypes","func","StyledPickerNB","mapPropsToStyleNames"],"mappings":"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","file":"Picker.ios.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport createReactClass from 'create-react-class';\nimport { FlatList, Modal, Picker, View, ViewPropTypes } from 'react-native';\nimport { connectStyle } from 'native-base-shoutem-theme';\nimport _ from 'lodash';\n\nimport computeProps from '../utils/computeProps';\nimport mapPropsToStyleNames from '../utils/mapPropsToStyleNames';\n\nimport { Text } from './Text';\nimport { Radio } from './Radio';\nimport { Container } from './Container';\nimport { ListItem } from './ListItem';\nimport { Button } from './Button';\nimport { Header } from './Header';\nimport { Title } from './Title';\nimport { Left } from './Left';\nimport { Right } from './Right';\nimport { Body } from './Body';\n\nclass PickerNB extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modalVisible: false,\n      currentLabel: this.getLabel(props),\n      dataSource: this.getChildren(props.children)\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const currentLabel = this.state.currentLabel;\n    const nextLabel = this.getLabel(nextProps);\n    const currentDS = this.state.dataSource;\n    const nextDS = this.getChildren(nextProps.children);\n\n    if (currentLabel !== nextLabel) {\n      this.setState({\n        currentLabel: nextLabel\n      });\n    }\n    if (currentDS !== nextDS) {\n      this.setState({\n        dataSource: nextDS\n      });\n    }\n  }\n\n  getInitialStyle = () => {\n    return {\n      picker: {\n        // alignItems: 'flex-end'\n      },\n      pickerItem: {}\n    };\n  };\n\n  getLabel(props) {\n    const children = this.getChildren(props.children);\n    const item = _.find(\n      children,\n      child => child.props.value === props.selectedValue\n    );\n    return _.get(item, 'props.label');\n  }\n\n  getSelectedItem() {\n    return _.find(\n      this.props.children,\n      child => child.props.value === this.props.selectedValue\n    );\n  }\n\n  getChildren = children => {\n    if (children && !Array.isArray(children)) {\n      return [].concat(children);\n    }\n    // eslint-disable-next-line prefer-spread\n    const appliedChildren = [].concat.apply([], children);\n    return appliedChildren;\n  };\n\n  prepareRootProps() {\n    const defaultProps = {\n      style: this.getInitialStyle().picker,\n      itemStyle: this.getInitialStyle().pickerItem\n    };\n\n    return computeProps(this.props, defaultProps);\n  }\n\n  _setModalVisible(visible) {\n    this.setState({ modalVisible: visible });\n  }\n\n  renderIcon() {\n    return React.cloneElement(this.props.iosIcon, {\n      style: [\n        {\n          fontSize: 22,\n          lineHeight: 26\n        },\n        { ...this.props.iosIcon.props.style }\n      ]\n    });\n  }\n\n  renderButton() {\n    const onPress = () => {\n      if (this.props.enabled !== undefined && !this.props.enabled) return;\n      this._setModalVisible(true);\n    };\n    const text = this.state.currentLabel\n      ? this.state.currentLabel\n      : this.props.placeholder;\n    if (this.props.renderButton) {\n      return this.props.renderButton({\n        onPress,\n        text,\n        picker: this,\n        selectedItem: this.getSelectedItem()\n      });\n    }\n    return (\n      <Button\n        style={this.props.style}\n        dark\n        picker\n        transparent\n        onPress={onPress}\n      >\n        {this.state.currentLabel ? (\n          <Text\n            style={[this.props.textStyle]}\n            note={this.props.note}\n            numberOfLines={1}\n            ellipsizeMode=\"tail\"\n          >\n            {this.state.currentLabel}\n          </Text>\n        ) : (\n          <Text\n            style={[this.props.textStyle, this.props.placeholderStyle]}\n            note={this.props.note !== false}\n            numberOfLines={1}\n            ellipsizeMode=\"tail\"\n          >\n            {this.props.placeholder}\n          </Text>\n        )}\n        {this.props.iosIcon === undefined ? null : this.renderIcon()}\n      </Button>\n    );\n  }\n\n  renderHeader() {\n    return this.props.renderHeader ? (\n      this.props.renderHeader(() => this._setModalVisible(false))\n    ) : (\n      <Header style={this.props.headerStyle}>\n        <Left>\n          <Button\n            style={{\n              shadowOffset: null,\n              shadowColor: null,\n              shadowRadius: null,\n              shadowOpacity: null,\n              marginLeft: 3,\n              ...this.props.headerBackButtonStyle\n            }}\n            transparent\n            onPress={() => {\n              this._setModalVisible(false);\n            }}\n          >\n            <Text style={this.props.headerBackButtonTextStyle}>\n              {this.props.headerBackButtonText || 'Back'}\n            </Text>\n          </Button>\n        </Left>\n        <Body>\n          <Title style={this.props.headerTitleStyle}>\n            {this.props.iosHeader || 'Select One'}\n          </Title>\n        </Body>\n        <Right />\n      </Header>\n    );\n  }\n\n  render() {\n    return (\n      <View ref={c => (this._root = c)}>\n        {this.renderButton()}\n        <Modal\n          // supportedOrientations={this.props.supportedOrientations || null}\n          supportedOrientations={['portrait', 'landscape']}\n          animationType=\"slide\"\n          transparent={false}\n          visible={this.state.modalVisible}\n          onRequestClose={() => {\n            this._setModalVisible(false);\n          }}\n        >\n          <Container style={this.props.modalStyle}>\n            {this.renderHeader()}\n            <FlatList\n              data={this.state.dataSource}\n              keyExtractor={(item, index) => String(index)}\n              renderItem={({ item }) => (\n                <ListItem\n                  selected={item.props.value === this.props.selectedValue}\n                  button\n                  style={this.props.itemStyle}\n                  onPress={() => {\n                    this._setModalVisible(false);\n                    this.props.onValueChange(item.props.value);\n                    this.setState({ current: item.props.label });\n                  }}\n                >\n                  <Left>\n                    <Text style={this.props.itemTextStyle}>\n                      {item.props.label}\n                    </Text>\n                  </Left>\n                  <Right>\n                    {item.props.value === this.props.selectedValue ? (\n                      <Radio selected />\n                    ) : (\n                      <Radio selected={false} />\n                    )}\n                  </Right>\n                </ListItem>\n              )}\n            />\n          </Container>\n        </Modal>\n      </View>\n    );\n  }\n}\n\nPickerNB.Item = createReactClass({\n  render() {\n    return <Picker.Item {...this.props()} />;\n  }\n});\n\nPickerNB.propTypes = {\n  ...ViewPropTypes,\n  renderButton: PropTypes.func\n};\n\nconst StyledPickerNB = connectStyle(\n  'NativeBase.PickerNB',\n  {},\n  mapPropsToStyleNames\n)(PickerNB);\n\nexport { StyledPickerNB as PickerNB };\n"]}